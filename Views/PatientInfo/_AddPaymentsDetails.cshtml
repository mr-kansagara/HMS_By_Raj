
<div class="row">
    <div class="form-group col-sm-12">
        <table id="tblPaymentsDetails" class="ItemsTable" border="1">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Payment Id</th>
                    <th>Payment Category</th>
                    <th>Charge Amount</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot id="tblAddLabTeststfoot">
                <tr>
                    <td>
                        <input id="PaymentsDetailsId" value="1" type="number" style="width: 50px;" class="unstyled-button" hidden readonly />
                    </td>
                    <td>
                        <input id="PaymentCategoriesId" type="text" style="width: 50px;" class="unstyled-button" hidden readonly />
                    </td>
                    <td>
                        <select id="PaymentCategorieName" asp-items="@ViewBag._LoadddlPaymentCategories" class="form-control" style="width:100%;">
                            <option disabled selected>--- SELECT ---</option>
                        </select>
                    </td>
                    <td>
                        <input id="ChargeAmount" type="number" onkeydown="onkeydownChargeAmount()" class="form-control" min="0" />
                    </td>
                    <td>
                        <input type="button" id="btnPaymentsDetails" value="Add Test" class="btn btn-info btn-xs" />
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>


<script>
    var listPaymentsDetails = new Array();

    var onkeydownChargeAmount = function () {
        if (event.keyCode == 13) {
            event.preventDefault();
            AddHTMLTableRow();
        }
    }

    $("body").on("click", "#btnPaymentsDetails", function () {
        AddHTMLTableRow();
    });


    var AddHTMLTableRow = function () {
        var _PaymentCategorieId = $("#PaymentCategorieName").val();
        if (_PaymentCategorieId === "" || _PaymentCategorieId === null) {
            Swal.fire({
                title: 'Payment Categorie is Required.',
                icon: "warning",
                onAfterClose: () => {
                    $("#PaymentCategorieName").focus();
                }
            });
            return;
        }
        var _ChargeAmount = $("#ChargeAmount").val();
        if (_ChargeAmount === "" || _ChargeAmount === null || parseFloat(_ChargeAmount) < 1) {
            Swal.fire({
                title: 'Minimum amount is required for Charge Amount.',
                icon: "warning",
                onAfterClose: () => {
                    $("#ChargeAmount").focus();
                }
            });
            return;
        }

        var _SearchInArray = SearchInArray(listPaymentsDetails, parseFloat(_PaymentCategorieId))
        if (_SearchInArray) {
            Swal.fire({
                title: 'Payment Categorie Item Already Added.',
                icon: "warning",
                onAfterClose: () => {
                    $("#PaymentCategorieName").focus();
                }
            });
            return;
        }

        var tBody = $("#tblPaymentsDetails > TBODY")[0];
        var row = tBody.insertRow(-1);

        var cell = $(row.insertCell(-1));
        cell.html($("#PaymentCategorieName").val());

        var cell = $(row.insertCell(-1));
        cell.html($("#PaymentCategorieName").val());

        var cell = $(row.insertCell(-1));
        cell.html($("#PaymentCategorieName option:selected").text());

        var cell = $(row.insertCell(-1));
        cell.html($("#ChargeAmount").val());

        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");
        btnRemove.attr("type", "button");
        btnRemove.attr('class', 'btn btn-danger btn-xs');
        btnRemove.attr("onclick", "Remove(this);");
        btnRemove.val("Remove");
        cell.append(btnRemove);

        var PaymentsDetailstems = {};
        PaymentsDetailstems.PaymentCategoriesId = parseFloat(_PaymentCategorieId);
        PaymentsDetailstems.ChargeAmount = $("#ChargeAmount").val();
        listPaymentsDetails.push(PaymentsDetailstems);

        UpdateSubTotalAndGrandTotal();
        UpdateCommonCharge();
        UpdateDiscount();
        UpdateTax();

        if (parseFloat($("#Id").val()) > 0) {
            PaymentsDetailstems.PaymentsId = $("#Id").val();
            SavePaymentsDetailsDB(PaymentsDetailstems);
        }

        $("#PaymentCategorieName").focus();
        ClearInvoiceItemTableRowData();
    }



    //Edit Option: Load Items
    $(document).ready(function () {
        if (parseFloat($("#Id").val()) > 0) {
            var result = @Html.Raw(Json.Serialize(Model.listPaymentsDetailsCRUDViewModel));
            if (result != null) {
                result.forEach(CreateTableRow);
                listPaymentsDetails = result;

                UpdateSubTotalAndGrandTotal();
                UpdateCommonCharge();
                UpdateDiscount();
                UpdateTax();
            }
        }
    });

    function CreateTableRow(item, index) {
        var tBody = $("#tblPaymentsDetails > TBODY")[0];
        var row = tBody.insertRow(-1);

        var cell = $(row.insertCell(-1));
        cell.html(item.Id);

        var cell = $(row.insertCell(-1));
        cell.html(item.PaymentCategoriesId);

        var cell = $(row.insertCell(-1));
        cell.html(item.PaymentCategoriesName);

        var cell = $(row.insertCell(-1));
        cell.html(item.ChargeAmount);

        //Add Button cell.
        cell = $(row.insertCell(-1));
        var btnRemove = $("<input />");
        btnRemove.attr("type", "button");
        btnRemove.attr('class', 'btn btn-danger btn-xs');
        btnRemove.attr("onclick", "Remove(this);");
        btnRemove.val("Remove");
        cell.append(btnRemove);
    }


    var ClearInvoiceItemTableRowData = function () {
        $("#PaymentsDetailsId").val("");
        $('#PaymentCategorieName').val(0).trigger('change');
        $("#PaymentCategoriesId").val("");
        $("#ChargeAmount").val("");
    }

    function Remove(button) {
        Swal.fire({
            title: 'Do you want to delete this item?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes'
        }).then((result) => {
            if (result.value) {
                RemoveHTMLTableRow(button);
            }
        });
    }

    function RemoveHTMLTableRow(button) {
        var row = $(button).closest("TR");
        var table = $("#tblPaymentsDetails")[0];
        table.deleteRow(row[0].rowIndex);


        var _PaymentCategoriesId = $("TD", row).eq(1).html();
        listPaymentsDetails = listPaymentsDetails.filter((item) => item.PaymentCategoriesId !== parseFloat(_PaymentCategoriesId));

        UpdateSubTotalAndGrandTotal();
        UpdateCommonCharge();
        UpdateDiscount();
        UpdateTax();

        if (parseFloat($("#Id").val()) > 0) {
            var _Id = $("TD", row).eq(0).html();
            var item = {};
            item.Id = _Id;
            item.PaymentsId = $("#Id").val();
            DeletePaymentsDetailsDB(item);
        }
        else {
            toastr.success("Item removed successfully.");
        }
    }

    var UpdateSubTotalAndGrandTotal = function () {
        $('#SubTotal').val(sumChargeAmount().toFixed(2));
        $('#GrandTotal').val(sumChargeAmount().toFixed(2));
    }

    var UpdateCommonCharge = function () {
        var _GetInputFields = GetInputFields();
        var result = sumChargeAmount() + _GetInputFields.CommonCharge;
        $('#SubTotal').val(result.toFixed(2));
        $('#GrandTotal').val(result.toFixed(2));

        UpdateDiscount();
        UpdateTax();
    }

    var UpdateDiscount = function () {
        var _GetInputFields = GetInputFields();
        var _sumChargeAmount = sumChargeAmount() + _GetInputFields.CommonCharge;
        var _DiscountPercentage = _GetInputFields.Discount / 100;
        var result = _sumChargeAmount - (_sumChargeAmount * _DiscountPercentage);

        $('#DiscountAmount').html((_sumChargeAmount * _DiscountPercentage).toFixed(2));
        $('#GrandTotal').val(result.toFixed(2));
    }

    var UpdateTax = function () {
        var _GetInputFields = GetInputFields();

        var _sumChargeAmount = sumChargeAmount() + _GetInputFields.CommonCharge;
        var _DiscountPercentage = _GetInputFields.Discount / 100;
        _sumChargeAmount = _sumChargeAmount - (_sumChargeAmount * _DiscountPercentage);
        var _TaxPercentage = _GetInputFields.Tax / 100;
        var result = _sumChargeAmount + (_sumChargeAmount * _TaxPercentage);

        $('#TaxAmount').html((_sumChargeAmount * _TaxPercentage).toFixed(2));
        $('#GrandTotal').val(result.toFixed(2));
    }


    var sumChargeAmount = function () {
        var _sumChargeAmount = 0;
        for (let i = 0; i < listPaymentsDetails.length; i++) {
            _sumChargeAmount = parseFloat(_sumChargeAmount) + parseFloat(listPaymentsDetails[i].ChargeAmount);
        }
        return _sumChargeAmount;
    }

    var GetInputFields = function () {
        var _CommonCharge = $("#CommonCharge").val();
        if (_CommonCharge === null || _CommonCharge === '')
            _CommonCharge = 0;

        var _Discount = $("#Discount").val();
        if (_Discount === null || _Discount === '')
            _Discount = 0;

        var _Tax = $("#Tax").val();
        if (_Tax === null || _Tax === '')
            _Tax = 0;

        var SendObject = {
            CommonCharge: parseFloat(_CommonCharge),
            Discount: parseFloat(_Discount),
            Tax: parseFloat(_Tax),
        }
        return SendObject;
    }
</script>